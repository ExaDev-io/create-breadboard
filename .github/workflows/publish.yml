name: Publish Package to npmjs

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - develop


jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      timestamp: ${{ steps.timestamp.outputs.time }}
    steps:
      - name: Generate timestamp
        id: timestamp
        run: echo "time=$(date +%Y%m%d%H%M%S)" >> $GITHUB_OUTPUT

  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: actions/setup-node@main
        with:
          node-version: "20.x"
          registry-url: "https://registry.npmjs.org"
      - run: |
          unset CI
          npm install
      - uses: actions/upload-artifact@main
        with:
          name: node_modules
          path: node_modules

  versioning:
    needs:
      - setup
      - install
    runs-on: ubuntu-latest
    outputs:
      new_version: ${{ steps.set_version.outputs.version }}
    steps:
      - uses: actions/checkout@main
      - name: Increment version
        id: increment_version
        run: |
          CURRENT_VERSION=$(node -p "require('./package.json').version")
          IFS='.' read -ra VERSION_PARTS <<< "$CURRENT_VERSION"
          PATCH_VERSION=$((VERSION_PARTS[2] + 1))
          INCREMENTED_VERSION="${VERSION_PARTS[0]}.${VERSION_PARTS[1]}.$PATCH_VERSION"
          echo "INCREMENTED_VERSION=$INCREMENTED_VERSION" >> $GITHUB_ENV
      - name: Set pre-release version
        id: set_version
        run: |
          NEW_VERSION="${{ env.INCREMENTED_VERSION }}-${{ github.ref_name }}.${{ needs.setup.outputs.timestamp }}"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_OUTPUT
          npm --no-git-tag-version version $NEW_VERSION

  build:
    needs:
      - versioning
      - setup
      - install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@main
        with:
          name: node_modules
      - run: npm run build
      - uses: actions/upload-artifact@main
        with:
          name: dist
          path: dist

  test_ts:
    needs: install
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - run: |
          unset CI
          npm install
      - run: npm run test:ts -- ${{ env.TEST_ARGS }}
        env:
          TEST_ARGS: "--template=foo test"
      - run: ls -la

  test_js:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - uses: actions/download-artifact@main
        with:
          name: dist
      - run: npm test -- ${{ env.TEST_ARGS }}
        env:
          TEST_ARGS: "--template=foo test"
      - run: ls -la

  publish:
    needs:
      - test_js
      - test_ts
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@main
      - name: Publish to npm
        run: npm publish --tag=${{ github.ref_name }}
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
